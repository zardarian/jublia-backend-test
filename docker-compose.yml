version: '3.8'

services:
  web:
    build:
      context: .
    command: flask --app main.py run --host=0.0.0.0
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  worker:
    build:
      context: .
    command: celery -A src.celery_worker.celery worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

  beat:
    build: .
    command: celery -A src.celery_worker.celery beat --loglevel=info
    depends_on:
      - redis
      - db
    volumes:
      - ./celerybeat-schedule:/celerybeat-schedule

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: always

volumes:
  postgres_data:
